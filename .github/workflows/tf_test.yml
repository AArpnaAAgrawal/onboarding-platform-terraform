name: 'tf-test'

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Choose the environment to deploy the Terraform code
        options: 
        - nonprod
        - qa
        - prod

permissions:
  contents: read

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    env: 
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Login to Azure 
      run: az login --service-principal -u "${ARM_CLIENT_ID}" -p "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}" >/dev/null

    - name: Terraform Init
      run: |
        cd ${{ github.event.inputs.environment }}
        echo "${{ github.event.inputs.environment }}"
        terraform init 

    - name: Terraform Plan
      run: |
        cd ${{ github.event.inputs.environment }}
        terraform plan -input=false

    - name: Terraform Apply
      run: |
        cd ${{ github.event.inputs.environment }}
        terraform apply -auto-approve -input=false
